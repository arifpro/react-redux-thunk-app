{"version":3,"sources":["redux/actionTypes.js","components/PokemonList.js","redux/actions/pokemonActions.js","components/Pokemon.js","components/ToDo/TodoInput.js","redux/actions/todoActions.js","components/ToDo/TodoItem.js","components/ToDo/TodoList.js","App.js","redux/reducers/pokemonListReducer.js","redux/reducers/pokemonMultipleReducer.js","redux/reducers/todoReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["POKEMON_LIST_LOADING","POKEMON_LIST_FAIL","POKEMON_LIST_SUCCESS","POKEMON_MULTIPLE_LOADING","POKEMON_MULTIPLE_FAIL","POKEMON_MULTIPLE_SUCCESS","ADD_TODO","UPDATE_TODO","DELETE_TODO","PokemonList","props","useState","search","setSearch","dispatch","useDispatch","pokemonList","useSelector","state","a","setA","useEffect","page","type","ActionTypes","offset","axios","get","res","payload","data","className","onSubmit","history","push","placeholder","onChange","e","target","value","loading","_","isEmpty","errorMsg","map","el","name","to","pageCount","Math","ceil","count","pageRangeDisplayed","marginPagesDisplayed","onPageChange","fetchData","selected","containerClassName","connect","pokemonState","pokemon","pokemonName","match","params","pokeData","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","stats","stat","base_stat","abilities","ability","ShowData","TodoInput","setName","onSubmitForm","event","todo","preventDefault","id","uuid","style","margin","TodoItem","editable","setEditable","updateTodo","data-label","class","width","color","textAlign","onClick","todoId","TodoList","todos","App","useHistory","exact","path","component","Pokemon","defaultState","pokemonListReducer","action","results","pokemonMultipleReducer","todoReducer","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.715ee3d4.chunk.js","sourcesContent":["export const POKEMON_LIST_LOADING = 'POKEMON_LIST_LOADING';\nexport const POKEMON_LIST_FAIL = 'POKEMON_LIST_FAIL';\nexport const POKEMON_LIST_SUCCESS = 'POKEMON_LIST_SUCCESS';\n\nexport const POKEMON_MULTIPLE_LOADING = 'POKEMON_MULTIPLE_LOADING';\nexport const POKEMON_MULTIPLE_FAIL = 'POKEMON_MULTIPLE_FAIL';\nexport const POKEMON_MULTIPLE_SUCCESS = 'POKEMON_MULTIPLE_SUCCESS';\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemonList } from \"../redux/actions/pokemonActions\";\n\nconst PokemonList = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const pokemonList = useSelector((state) => state.pokemonList);\n\n  const [a, setA] = useState(1);\n\n  const fetchData = (page = 1) => {\n    // dispatch(getPokemonList(page));\n    setA(page);\n  };\n\n  useEffect(() => {\n    // fetchData(1);\n    dispatch(getPokemonList(a));\n  }, [dispatch, a]);\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return (\n        <div className=\"list-wrapper\">\n          {pokemonList.data.map((el) => (\n            <div className=\"pokemon-item\" key={el.name}>\n              <p>{el.name}</p>\n              <Link to={`/pokemon/${el.name}`}>View</Link>\n            </div>\n          ))}\n        </div>\n      );\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return <p>{pokemonList.errorMsg}</p>;\n    }\n\n    return <p>unable to get data</p>;\n  };\n\n  return (\n    <div>\n      {/* <div className=\"search-wrapper\">\n        <p>Search: </p>\n        <input type=\"text\" onChange={(e) => setSearch(e.target.value)} />\n        <button onClick={() => props.history.push(`/pokemon/${search}`)}>\n          Search\n        </button>\n      </div> */}\n\n      <div className=\"ui category search search-wrapper\">\n        <form onSubmit={() => props.history.push(`/pokemon/${search}`)}>\n          <div className=\"ui icon input\">\n            <input\n              className=\"prompt\"\n              type=\"text\"\n              placeholder=\"Search pokemon...\"\n              onChange={(e) => setSearch(e.target.value)}\n            />\n            <i className=\"search icon\"></i>\n          </div>\n        </form>\n        <div className=\"results\"></div>\n      </div>\n\n      {ShowData()}\n      {!_.isEmpty(pokemonList.data) && (\n        <ReactPaginate\n          pageCount={Math.ceil(pokemonList.count / 15)}\n          pageRangeDisplayed={2}\n          marginPagesDisplayed={1}\n          onPageChange={(data) => fetchData(data.selected + 1)}\n          containerClassName=\"pagination\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import * as ActionTypes from '../actionTypes';\nimport axios from \"axios\";\n\nexport const getPokemonList = (page) => async dispatch => {\n  try {\n    dispatch({\n      type: ActionTypes.POKEMON_LIST_LOADING\n    });\n\n    const perPage = 15;\n    const offset = (page * perPage) - perPage;\n\n    const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${perPage}&offset=${offset}`)\n\n    dispatch({\n      type: ActionTypes.POKEMON_LIST_SUCCESS,\n      payload: res.data\n    })\n  } catch (e) {\n    dispatch({\n      type: ActionTypes.POKEMON_LIST_FAIL,\n    })\n  }\n};\n\nexport const getPokemon = (pokemon) => async dispatch => {\n  try {\n    dispatch({\n      type: ActionTypes.POKEMON_MULTIPLE_LOADING\n    });\n\n    const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\n\n    dispatch({\n      type: ActionTypes.POKEMON_MULTIPLE_SUCCESS,\n      payload: res.data,\n      pokemonName: pokemon\n    })\n  } catch (e) {\n    dispatch({\n      type: ActionTypes.POKEMON_MULTIPLE_FAIL,\n    })\n  }\n};","import React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getPokemon } from \"../redux/actions/pokemonActions\";\n\nconst Pokemon = (props) => {\n  const pokemonName = props.match.params.pokemon;\n  const dispatch = useDispatch();\n  // const props.pokemonState = useSelector(state => state.Pokemon);\n\n  useEffect(() => {\n    dispatch(getPokemon(pokemonName));\n  }, [dispatch, pokemonName]);\n\n  const ShowData = () => {\n    if (!_.isEmpty(props.pokemonState.data[pokemonName])) {\n      const pokeData = props.pokemonState.data[pokemonName];\n      return (\n        <div className=\"pokemon-wrapper\">\n          <div className=\"item\">\n            <h1>Sprites</h1>\n            <img src={pokeData.sprites.front_default} alt=\"\" />\n            <img src={pokeData.sprites.back_default} alt=\"\" />\n            <img src={pokeData.sprites.front_shiny} alt=\"\" />\n            <img src={pokeData.sprites.back_shiny} alt=\"\" />\n          </div>\n          <div className=\"item\">\n            <h1>Stats</h1>\n            {pokeData.stats.map((el) => {\n              return (\n                <p key={el.stat.name}>\n                  {el.stat.name} {el.base_stat}\n                </p>\n              );\n            })}\n          </div>\n          <div className=\"item\">\n            <h1>Abilities</h1>\n            {pokeData.abilities.map((el) => (\n              <p key={el.ability.name}>{el.ability.name}</p>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    if (props.pokemonState.loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (props.pokemonState.errorMsg !== \"\") {\n      return <p>{props.pokemonState.errorMsg}</p>;\n    }\n\n    return <p>error getting pokemon</p>;\n  };\n\n  return (\n    <div className=\"poke\">\n      <h1>{pokemonName}</h1>\n      {ShowData()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  pokemonState: state.pokemon,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);\n","import React, { useState } from 'react'\nimport { v1 as uuid } from 'uuid'\nimport { useDispatch } from 'react-redux'\nimport { addTodo } from '../../redux/actions/todoActions'\n\nconst TodoInput = () => {\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    \n    const onSubmitForm = event => {\n        event.preventDefault()\n        dispatch(addTodo({\n            id: uuid(),\n            name: name\n        }))\n        setName('')\n    }\n    return (\n        <div style={{ margin: '3rem'}}>\n            <form onSubmit={e => onSubmitForm(e)}>\n                <div className=\"ui fluid action input\">\n                    <input\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"Type any task...\"\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                    <button type=\"submit\" className=\"ui button\">Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoInput\n","import * as ActionTypes from '../actionTypes';\n\nexport const addTodo = todo => {\n    return {\n        type: ActionTypes.ADD_TODO,\n        payload: todo,\n    }\n};\n\nexport const updateTodo = todo => {\n    return {\n        type: ActionTypes.UPDATE_TODO,\n        payload: todo,\n    }\n};\n\nexport const deleteTodo = todoId => {\n    return {\n        type: ActionTypes.DELETE_TODO,\n        payload: todoId,\n    }\n};","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateTodo, deleteTodo } from '../../redux/actions/todoActions'\n\nconst TodoItem = ({ todo }) => {\n    const [editable, setEditable] = useState(false)\n    const [name, setName] = useState(todo.name)\n    const dispatch = useDispatch()\n\n    const onSubmitForm = event => {\n        event.preventDefault()\n        dispatch(updateTodo({\n            id: todo.id,\n            name: name\n        }))\n        setEditable(false)\n    }\n\n    if (!todo) return null\n    \n    return (\n        <tr>\n            <td data-label=\"No\">#{todo.id}</td>\n            <td data-label=\"Title\">\n                {\n                    editable ? \n                    <form class=\"ui fluid action input focus\" style={{ width: '100%' }} onSubmit={(e) => onSubmitForm(e)}>\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <button type=\"submit\" className=\"ui button\">Update</button>\n                    </form>\n                    : todo.name\n                }\n            </td>\n            <td\n                data-label=\"Edit\"\n                style={{ color: 'blue', textAlign: 'center' }}\n                onClick={() => setEditable(!editable)}\n            >\n                <i className=\"edit icon\"></i>\n            </td>\n            <td\n                data-label=\"Delete\"\n                style={{ color: 'red', textAlign: 'center' }}\n                onClick={() => dispatch(deleteTodo(todo.id))}\n            >\n                <i className=\"trash icon\"></i>\n            </td>\n        </tr>\n    )\n}\n\nexport default TodoItem\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport TodoItem from './TodoItem'\n\nconst TodoList = () => {\n    const todos = useSelector(state => state.todos)\n\n    return (\n        <div>\n            <section style={{ margin: '3rem' }}>\n                <table className=\"ui celled table\">\n                    <thead>\n                        <tr style={{ textAlign: 'center' }}>\n                            <th style={{ width: '25%' }}>No</th>\n                            <th>Title</th>\n                            <th style={{ width: '10%' }}>Update</th>\n                            <th style={{ width: '10%' }}>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            todos && todos.map(todo => (\n                                <TodoItem\n                                    key={todo.id}\n                                    todo={todo}\n                                />\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </section>\n        </div>\n    )\n}\n\nexport default TodoList\n","import React from 'react';\nimport './App.css';\nimport {Switch, Route, NavLink, Redirect, useHistory} from \"react-router-dom\";\n\n// components\nimport PokemonList from \"./components/PokemonList\";\nimport Pokemon from \"./components/Pokemon\";\nimport TodoInput from \"./components/ToDo/TodoInput\";\nimport TodoList from \"./components/ToDo/TodoList\";\n\nfunction App() {\n  const history = useHistory();\n\n  return (\n    <div className=\"App\">\n      <nav className=\"app__navbar\">\n        <NavLink to=\"/home\">Search</NavLink>\n        <NavLink to=\"/\">To-Do</NavLink>\n      </nav>\n      <Switch>\n        <Route exact path=\"/\">\n          <TodoInput />\n          <TodoList />\n        </Route>\n        <Route path=\"/home\" component={PokemonList} />\n        <Route path=\"/pokemon/:pokemon\" component={Pokemon} />\n        {/* <Redirect to=\"/\" /> */}\n        {/* <Route path=\"*\">\n          <h1 style={{ textAlign: 'center' }}>Page Not Found</h1>\n          {setTimeout(function(){ history.push('/') }, 3000)}\n        </Route> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import * as ActionTypes from '../actionTypes';\n\nconst defaultState = {\n  loading: false,\n  data: [],\n  errorMsg: \"\",\n  count: 0\n};\n\nconst pokemonListReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ActionTypes.POKEMON_LIST_LOADING:\n      return {\n        ...state,\n        loading: true,\n        errorMsg: \"\"\n      };\n    case ActionTypes.POKEMON_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"unable to get pokemon\"\n      };\n    case ActionTypes.POKEMON_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.results,\n        errorMsg: \"\",\n        count: action.payload.count\n      };\n    default:\n      return state\n  }\n};\n\nexport default pokemonListReducer;","import * as ActionTypes from '../actionTypes';\n\nconst defaultState = {\n  loading: false,\n  data: {},\n  errorMsg: \"\"\n};\n\nconst pokemonMultipleReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ActionTypes.POKEMON_MULTIPLE_LOADING:\n      return {\n        ...state,\n        loading: true,\n        errorMsg: \"\"\n      };\n    case ActionTypes.POKEMON_MULTIPLE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"unable to find pokemon\"\n      };\n    case ActionTypes.POKEMON_MULTIPLE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"\",\n        data: {\n          ...state.data,\n          [action.pokemonName]: action.payload\n        }\n      };\n    default:\n      return state\n  }\n};\n\nexport default pokemonMultipleReducer;","import * as ActionTypes from '../actionTypes';\n\nconst defaultState = [\n    {\n        id: 1,\n        name: \"One\",\n    },\n    {\n        id: 2,\n        name: \"Two\",\n    },\n    {\n        id: 3,\n        name: \"Three\",\n    },\n];\n\nconst todoReducer = (state = defaultState, action) => {\n    // console.log(action)\n    switch (action.type) {\n        case ActionTypes.ADD_TODO:\n            // return [...state, { id: state[state.length - 1].id + 1, name: action.payload}]\n            return [...state, action.payload]\n        case ActionTypes.UPDATE_TODO:\n            return state.map(todo => (\n                todo.id === action.payload.id ? {...todo, name: action.payload.name} : todo\n            ))\n        case ActionTypes.DELETE_TODO:\n            return state.filter(todo => todo.id !== action.payload)\n        default:\n            return state\n    }\n};\n\nexport default todoReducer;","import {combineReducers} from \"redux\";\nimport pokemonListReducer from \"./pokemonListReducer\";\nimport pokemonMultipleReducer from \"./pokemonMultipleReducer\";\nimport todoReducer from \"./todoReducer\";\n\nconst rootReducer = combineReducers({\n  pokemonList: pokemonListReducer,\n  pokemon: pokemonMultipleReducer,\n  todos: todoReducer,\n});\n\nexport default rootReducer;","import {createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\n\n// redux\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}